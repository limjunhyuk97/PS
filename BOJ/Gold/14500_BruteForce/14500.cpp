// 노가다로 경우의 수를 고려

#include <iostream>
#include <utility>
using namespace std;

int N, M, MAX;
int grid[502][502];

int dx[22][4] = { {1, 1, 2, 2}, {0, 1, 1, 2}, {0, 1, 1, 2}, {0, 0, 1, 1}, {0, 1, 2, 2}, {0, 1, 1, 2}, {0, 0, 1, 2}, {0, 1, 1, 2}, {0, 1, 2, 2}, {0, 0, 1, 2}, {0, 1, 2, 3}, {0, 0, 0, 0},
					{0, 1, 1, 1}, {0, 1, 1, 1}, {0, 1, 1, 1}, {0, 0, 1, 1}, {0, 0, 0, 1}, {0, 0, 0, 1}, {0, 0, 0, 1}, {0, 0, 1, 1}, {0, 0, 1, 1}, {0, 0, 1, 1} };
int dy[22][4] = { {0, 1, 0, 1}, {1, 0, 1, 0}, {0, 0, 1, 1}, {0, 1, 0, 1}, {1, 1, 0, 1}, {1, 0, 1, 1}, {0, 1, 1, 1}, {0, 0, 1, 0}, {0, 0, 0, 1}, {0, 1, 0, 0}, {0, 0, 0, 0}, {0, 1, 2, 3},
					{1, 0, 1, 2}, {2, 0, 1, 2}, {0, 0, 1, 2}, {0, 1, 0, 1}, {0, 1, 2, 2}, {0, 1, 2, 1}, {0, 1, 2, 0}, {1, 2, 0, 1}, {1, 2, 1, 2}, {0, 1, 1, 2} };

void gridcheck(int n, int m) {
	for (int i = 0; i < 22; ++i) {
		int tmp = 0;
		for (int j = 0; j < 4; ++j) {
			if (!((n + dx[i][j] < N) && (m + dy[i][j] < M))) {
				break;
			}
			tmp += grid[n + dx[i][j]][m + dy[i][j]];
		}
		MAX = max(MAX, tmp);
	}
}

int main(void) {

	cin >> N >> M;

	for (int i = 0; i < N; ++i) {
		for (int j = 0; j < M; ++j) {
			cin >> grid[i][j];
		}
	}

	for (int i = 0; i < N; ++i) {
		for (int j = 0; j < M; ++j) {
			gridcheck(i, j);
		}
	}

	cout << MAX << "\n";

	return 0;
}
